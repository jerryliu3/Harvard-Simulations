#program that calculates the phase for a range of diameter and height for the FDTD project that is open
switchtolayout;

#constant parameters and setup
radii = 325:5:500;
heights = 500:100:1500;
frq_points = 1;
nm = 1e-9;
setnamed("substrate", "x span", 1*1e-5);
setnamed("substrate", "y span", 1*1e-5);
setnamed("substrate_reflector", "outer radius", 0.5*1e-5);
setnamed("FDTD", "z max", heights(length(heights))*nm + 1200*nm);
setnamed("reflectance_monitor", "z", heights(length(heights))*nm + 1000*nm);
setnamed("transmission_monitor", "z", -500*nm);
setnamed("source", "z", heights(length(heights))*nm + 750*nm);

#reference	
REF_Ex = matrix(frq_points,1);
REF_Ey = matrix(frq_points,1);
switchtolayout;
select("pillar");
set("enabled", 0);
select("pillar_reflector");
set("enabled", 0);
select("mesh");
set("enabled", 0);
?"Reference";
run;
#reference farfield
for (i = 1:frq_points) {
    E = farfieldexact("reflectance_monitor", 0, 0, 1e-4, i);
    REF_Ex(i) = E(1); REF_Ey(i) = E(2);
}
    
switchtolayout;
select("pillar");
set("enabled", 1);
select("pillar_reflector");
set("enabled", 1);
select("mesh");
set("enabled", 1);

#pillar
phasex = matrix(frq_points, length(radii), length(heights));
phasey = matrix(frq_points, length(radii), length(heights));
Ex = matrix(frq_points,length(radii), length(heights));
Ey = matrix(frq_points,length(radii), length(heights));
unwrapped_phasex = matrix(frq_points, length(radii), length(heights));
pillar_reflection = matrix(frq_points, length(radii), length(heights));
pillar_transmission = matrix(frq_points, length(radii), length(heights));
?"Pillar";

for(radius = 1:length(radii))
{
    ?"Running "+num2str(radius)+" of "+num2str(length(radii));  
    switchtolayout;
    setnamed("pillar", "radius", radii(radius)*nm);
    setnamed("substrate_reflector", "inner radius", radii(radius)*nm);
    setnamed("pillar_reflector", "radius", radii(radius)*nm);
    setnamed("FDTD", "x span", radii(radius)*2*nm + 350*nm);
    setnamed("FDTD", "y span", radii(radius)*2*nm + 350*nm);
    setnamed("reflectance_monitor", "x span", radii(radius)*2*nm + 400*nm);
    setnamed("reflectance_monitor", "y span", radii(radius)*2*nm + 400*nm);
    setnamed("transmission_monitor", "x span", radii(radius)*2*nm + 400*nm);
    setnamed("transmission_monitor", "y span", radii(radius)*2*nm + 400*nm);
    setnamed("mesh", "x span", radii(radius)*2*nm + 100*nm);
    setnamed("mesh", "y span", radii(radius)*2*nm + 100*nm);
        
    
    for(height = 1:length(heights))
    {
        ?"Running "+num2str(height)+" of "+num2str(length(heights));  
        switchtolayout;
        setnamed("pillar", "z max", heights(height)*nm);
        setnamed("pillar_reflector", "z max", heights(height)*nm + 80*nm);
        setnamed("pillar_reflector", "z min", heights(height)*nm);
        setnamed("mesh", "z max", heights(height)*nm + 100*nm);
        run;
        
        #pillar farfield
        for (i = 1:frq_points) {
            E = farfieldexact("reflectance_monitor", 0, 0, 1e-4, i);
            Ex(i, radius, height) = E(1); Ey(i, radius, height) = E(2);
        }
        pillar_reflection(:, radius, height) = transmission("reflectance_monitor");
        pillar_transmission(:, radius, height) = transmission("transmission_monitor");
        #phase
        for (i = 1:frq_points)
        {
            phasex(i, radius, height) = angle(Ex(i,radius, height)) - angle(REF_Ex(i));
            phasey(i, radius, height) = angle(Ey(i, radius, height)) - angle(REF_Ey(i));
        }	
        unwrapped_phasex(:, radius, height) = unwrap(phasex(:, radius,height));
        
        frequencies = matrix(frq_points, 1);
        frequencies = getdata("reflectance_monitor", "f");       
        r = pillar_reflection(:, radius, height);
        t = pillar_transmission(:, radius, height);
        px = phasex(:, radius, height);
        py = phasey(:, radius, height);
        upx = unwrapped_phasex(:, radius, height);
        matlabsave("data_" + num2str(radius*2) + "_" + num2str(height) +".mat", t, px, py, upx, frequencies);    
    }
}

frequencies = matrix(frq_points, 1);
frequencies = getdata("reflectance_monitor", "f");
matlabsave("data_all_diameters_heights.mat");